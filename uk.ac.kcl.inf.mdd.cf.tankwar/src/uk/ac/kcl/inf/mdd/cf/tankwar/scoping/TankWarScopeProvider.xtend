/*
 * generated by Xtext 2.24.0
 */
package uk.ac.kcl.inf.mdd.cf.tankwar.scoping

import org.eclipse.emf.ecore.EObject

import org.eclipse.emf.ecore.EReference
import org.eclipse.xtext.scoping.IScope
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider
import uk.ac.kcl.inf.mdd.cf.tankwar.tankWar.TankWarPackage
import org.eclipse.xtext.EcoreUtil2
import java.util.List
import org.eclipse.xtext.scoping.Scopes
import uk.ac.kcl.inf.mdd.cf.tankwar.tankWar.ScreenSpecification

/** 
 * This class contains custom scoping description.
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class TankWarScopeProvider extends AbstractDeclarativeScopeProvider {
//	override IScope getScope(EObject context, EReference reference) {
//		if (reference.getEReferenceType() === TankWarPackage::Literals::SCREEN_SPECIFICATION) {
//			// All references to screen specifications, no matter where, always see all the screen specifications in the model
//			var EObject
//			rootElement = EcoreUtil2.getRootContainer(context)//
//			var List<? extends EObject> candidates = EcoreUtil2.getAllContentsOfType(rootElement, ScreenSpecification)
//			return Scopes.scopeFor(candidates)
//		} else {
//			return super.getScope(context, reference)
//		}
//	}
}
