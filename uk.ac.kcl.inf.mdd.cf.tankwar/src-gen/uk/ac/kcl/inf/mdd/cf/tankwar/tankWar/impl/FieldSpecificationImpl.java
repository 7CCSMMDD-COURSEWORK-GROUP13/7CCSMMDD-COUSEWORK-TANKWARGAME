/**
 * generated by Xtext 2.24.0
 */
package uk.ac.kcl.inf.mdd.cf.tankwar.tankWar.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import uk.ac.kcl.inf.mdd.cf.tankwar.tankWar.FieldSpecification;
import uk.ac.kcl.inf.mdd.cf.tankwar.tankWar.Obstaclepecification;
import uk.ac.kcl.inf.mdd.cf.tankwar.tankWar.TankWarPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Field Specification</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.inf.mdd.cf.tankwar.tankWar.impl.FieldSpecificationImpl#getName <em>Name</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.mdd.cf.tankwar.tankWar.impl.FieldSpecificationImpl#getEnemyCount <em>Enemy Count</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.mdd.cf.tankwar.tankWar.impl.FieldSpecificationImpl#getObstacle <em>Obstacle</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FieldSpecificationImpl extends MinimalEObjectImpl.Container implements FieldSpecification
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getEnemyCount() <em>Enemy Count</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnemyCount()
   * @generated
   * @ordered
   */
  protected static final int ENEMY_COUNT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getEnemyCount() <em>Enemy Count</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnemyCount()
   * @generated
   * @ordered
   */
  protected int enemyCount = ENEMY_COUNT_EDEFAULT;

  /**
   * The cached value of the '{@link #getObstacle() <em>Obstacle</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObstacle()
   * @generated
   * @ordered
   */
  protected Obstaclepecification obstacle;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FieldSpecificationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TankWarPackage.Literals.FIELD_SPECIFICATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TankWarPackage.FIELD_SPECIFICATION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getEnemyCount()
  {
    return enemyCount;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnemyCount(int newEnemyCount)
  {
    int oldEnemyCount = enemyCount;
    enemyCount = newEnemyCount;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TankWarPackage.FIELD_SPECIFICATION__ENEMY_COUNT, oldEnemyCount, enemyCount));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Obstaclepecification getObstacle()
  {
    return obstacle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetObstacle(Obstaclepecification newObstacle, NotificationChain msgs)
  {
    Obstaclepecification oldObstacle = obstacle;
    obstacle = newObstacle;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TankWarPackage.FIELD_SPECIFICATION__OBSTACLE, oldObstacle, newObstacle);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setObstacle(Obstaclepecification newObstacle)
  {
    if (newObstacle != obstacle)
    {
      NotificationChain msgs = null;
      if (obstacle != null)
        msgs = ((InternalEObject)obstacle).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TankWarPackage.FIELD_SPECIFICATION__OBSTACLE, null, msgs);
      if (newObstacle != null)
        msgs = ((InternalEObject)newObstacle).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TankWarPackage.FIELD_SPECIFICATION__OBSTACLE, null, msgs);
      msgs = basicSetObstacle(newObstacle, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TankWarPackage.FIELD_SPECIFICATION__OBSTACLE, newObstacle, newObstacle));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TankWarPackage.FIELD_SPECIFICATION__OBSTACLE:
        return basicSetObstacle(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TankWarPackage.FIELD_SPECIFICATION__NAME:
        return getName();
      case TankWarPackage.FIELD_SPECIFICATION__ENEMY_COUNT:
        return getEnemyCount();
      case TankWarPackage.FIELD_SPECIFICATION__OBSTACLE:
        return getObstacle();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TankWarPackage.FIELD_SPECIFICATION__NAME:
        setName((String)newValue);
        return;
      case TankWarPackage.FIELD_SPECIFICATION__ENEMY_COUNT:
        setEnemyCount((Integer)newValue);
        return;
      case TankWarPackage.FIELD_SPECIFICATION__OBSTACLE:
        setObstacle((Obstaclepecification)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TankWarPackage.FIELD_SPECIFICATION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case TankWarPackage.FIELD_SPECIFICATION__ENEMY_COUNT:
        setEnemyCount(ENEMY_COUNT_EDEFAULT);
        return;
      case TankWarPackage.FIELD_SPECIFICATION__OBSTACLE:
        setObstacle((Obstaclepecification)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TankWarPackage.FIELD_SPECIFICATION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case TankWarPackage.FIELD_SPECIFICATION__ENEMY_COUNT:
        return enemyCount != ENEMY_COUNT_EDEFAULT;
      case TankWarPackage.FIELD_SPECIFICATION__OBSTACLE:
        return obstacle != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", enemyCount: ");
    result.append(enemyCount);
    result.append(')');
    return result.toString();
  }

} //FieldSpecificationImpl
